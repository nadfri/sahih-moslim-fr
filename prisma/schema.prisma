generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id        String   @id
  email     String?
  name      String?
  image     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

/// *
/// * Hadith models
model Hadith {
  id                 String              @id @default(cuid())
  numero             Int                 @unique
  matn_fr            String
  matn_ar            String
  chapterId          String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  matn_en            String
  chapter            Chapter             @relation(fields: [chapterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_hadith_chapter")
  hadithTransmitters HadithTransmitter[]
  mentionedSahabas   Sahaba[]
  // Full-text search indexes are created manually via SQL migration
  // @@index([matn_ar], map: "idx_hadith_matn_ar_fts") - Created via SQL
  // @@index([matn_en], map: "idx_hadith_matn_en_fts") - Created via SQL  
  // @@index([matn_fr], map: "idx_hadith_matn_fr_fts") - Created via SQL

  @@index([chapterId], map: "idx_hadith_chapterid")
  @@index([chapterId, numero], map: "idx_hadith_chapterid_numero")
  @@index([numero], map: "idx_hadith_numero")
}

model Chapter {
  id        String   @id @default(cuid())
  index     Int      @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name_fr   String
  name_ar   String?
  name_en   String?
  hadiths   Hadith[]

  @@index([index], map: "idx_chapter_index")
  @@index([name_ar], map: "idx_chapter_name_ar")
  @@index([name_en], map: "idx_chapter_name_en")
  @@index([name_fr], map: "idx_chapter_name_fr")
  @@index([slug], map: "idx_chapter_slug")
}

model Sahaba {
  id                 String   @id @default(cuid())
  slug               String   @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  name_fr            String
  name_ar            String?
  name_en            String?
  mentionedInHadiths Hadith[]

  @@index([name_ar], map: "idx_sahaba_name_ar")
  @@index([name_en], map: "idx_sahaba_name_en")
  @@index([name_fr], map: "idx_sahaba_name_fr")
  @@index([slug], map: "idx_sahaba_slug")
}

model Transmitter {
  id                 String              @id @default(cuid())
  slug               String              @unique
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  name_fr            String
  name_ar            String?
  name_en            String?
  hadithTransmitters HadithTransmitter[]

  @@index([name_ar], map: "idx_transmitter_name_ar")
  @@index([name_en], map: "idx_transmitter_name_en")
  @@index([name_fr], map: "idx_transmitter_name_fr")
  @@index([slug], map: "idx_transmitter_slug")
}

model HadithTransmitter {
  id            String      @id @default(cuid())
  hadithId      String
  transmitterId String
  order         Int
  hadith        Hadith      @relation(fields: [hadithId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ht_hadith")
  transmitter   Transmitter @relation(fields: [transmitterId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ht_transmitter")

  @@unique([hadithId, transmitterId])
  @@unique([hadithId, order])
  @@index([hadithId], map: "idx_ht_hadithid")
  @@index([transmitterId], map: "idx_ht_transmitterid")
}

/// *
/// * Authentication models - Supabase Auth
enum Role {
  USER
  ADMIN
}
